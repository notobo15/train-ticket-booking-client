import type { Metadata } from "next";
// import localFont from "next/font/local";
import "../styles/globals.css";
import "../styles/styles.css";
import StoreProvider from "@/redux/StoreProvider";
import { locales } from "@/i18n/i18n.config";
import { getMessages } from "next-intl/server";
import { NextIntlClientProvider } from "next-intl";
import { SessionProvider } from "next-auth/react";
import SessionWrapper from "@/auth/SessionWrapper";
import "react-toastify/dist/ReactToastify.css";
import { ToastContainer } from "react-toastify";
import NextTopLoader from "nextjs-toploader";
import Script from "next/script";
// import { notFound } from 'next/navigation';
// const codecPro = localFont({
//   src: "./fonts/CodecPro-Regular.ttf",
//   variable: "--font-codecpro",
//   weight: "100 900",
// });

export const metadata: Metadata = {
  title: "TrainTicket.Hub - The Best Way to Booking Train Ticket",
  description: "Generated by create next app",
  icons: {
    icon: "/logo.jpg",
  },
};
type Props = {
  children: React.ReactNode;
  params: { locale: string };
};

export async function generateStaticParams() {
  return locales.map((locale) => ({ locale }));
}

export default async function RootLayout({ children, params }: Props) {
  const { locale } = await params;
  const messages = await getMessages({ locale });
  return (
    <html lang={locale} suppressHydrationWarning={true}>
      <body>
        <NextTopLoader showSpinner={false} />
        <Script src="https://accounts.google.com/gsi/client" strategy="beforeInteractive" />
        <SessionWrapper>
          <NextIntlClientProvider messages={messages}>
            <StoreProvider>
              <ToastContainer />
              {children}
            </StoreProvider>
          </NextIntlClientProvider>
        </SessionWrapper>
      </body>
    </html>
  );
}
